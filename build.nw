
Simply run 'nofake build.nw' for build instructions.  The nofake utility is
available from coolscripts, at [1].  See [2] for more info.

- [1]: https://github.com/ctarbide/coolscripts

- [2]: https://github.com/ctarbide/coolscripts/blob/master/bin/nofake-README.txt

<<*>>=
nofake -R'build linux compiler-independent' build.nw
@

<<build linux compiler-independent>>=
<<extract sources>>
cat noconfig/linux.mak > src/Makefile
make -C src
@

<<extract sources>>=
CHMOD='chmod 0444' nofake.sh -L -Rcc1.c -osrc/cc1.c mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rdirective.c -osrc/directive.c mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Reval.c -osrc/eval.c mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rexpand.c -osrc/expand.c mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rmain.c -osrc/main.c mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rmain_libmcpp.c -osrc/main_libmcpp.c mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rmbchar.c -osrc/mbchar.c mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rmcpp_lib.h -osrc/mcpp_lib.h mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rmcpp_out.h -osrc/mcpp_out.h mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rpreproc.c -osrc/preproc.c mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rsupport.c -osrc/support.c mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rsystem.c -osrc/system.c mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rtestmain.c -osrc/testmain.c mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rconfiged.h -osrc/configed.h mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rinternal.h -osrc/internal.h mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rnoconfig.h -osrc/noconfig.h mcpp.nw
CHMOD='chmod 0444' nofake.sh -L -Rsystem.h -osrc/system.h mcpp.nw
@
